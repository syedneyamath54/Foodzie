{"ast":null,"code":"import React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { Provider as PaperProvider } from 'react-native-paper';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport { StatusBar } from 'expo-status-bar';\nimport { Ionicons } from '@expo/vector-icons';\nimport HomeScreen from \"./src/screens/HomeScreen\";\nimport TasksScreen from \"./src/screens/TasksScreen\";\nimport SettingsScreen from \"./src/screens/SettingsScreen\";\nimport { theme } from \"./src/styles/theme\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\nexport default function App() {\n  return _jsx(SafeAreaProvider, {\n    children: _jsx(PaperProvider, {\n      theme: theme,\n      children: _jsxs(NavigationContainer, {\n        children: [_jsx(StatusBar, {\n          style: \"auto\"\n        }), _jsxs(Tab.Navigator, {\n          screenOptions: function screenOptions(_ref) {\n            var route = _ref.route;\n            return {\n              tabBarIcon: function tabBarIcon(_ref2) {\n                var focused = _ref2.focused,\n                  color = _ref2.color,\n                  size = _ref2.size;\n                var iconName;\n                if (route.name === 'Home') {\n                  iconName = focused ? 'home' : 'home-outline';\n                } else if (route.name === 'Tasks') {\n                  iconName = focused ? 'checkmark-circle' : 'checkmark-circle-outline';\n                } else if (route.name === 'Settings') {\n                  iconName = focused ? 'settings' : 'settings-outline';\n                }\n                return _jsx(Ionicons, {\n                  name: iconName,\n                  size: size,\n                  color: color\n                });\n              },\n              tabBarActiveTintColor: theme.colors.primary,\n              tabBarInactiveTintColor: 'gray',\n              tabBarStyle: {\n                backgroundColor: theme.colors.surface,\n                borderTopWidth: 1,\n                borderTopColor: theme.colors.outline,\n                paddingBottom: 5,\n                paddingTop: 5,\n                height: 60\n              },\n              headerStyle: {\n                backgroundColor: theme.colors.primary\n              },\n              headerTintColor: theme.colors.onPrimary,\n              headerTitleStyle: {\n                fontWeight: 'bold'\n              }\n            };\n          },\n          children: [_jsx(Tab.Screen, {\n            name: \"Home\",\n            component: HomeScreen,\n            options: {\n              title: 'Dashboard'\n            }\n          }), _jsx(Tab.Screen, {\n            name: \"Tasks\",\n            component: TasksScreen,\n            options: {\n              title: 'My Tasks'\n            }\n          }), _jsx(Tab.Screen, {\n            name: \"Settings\",\n            component: SettingsScreen,\n            options: {\n              title: 'Settings'\n            }\n          })]\n        })]\n      })\n    })\n  });\n}","map":{"version":3,"names":["React","NavigationContainer","createBottomTabNavigator","Provider","PaperProvider","SafeAreaProvider","StatusBar","Ionicons","HomeScreen","TasksScreen","SettingsScreen","theme","jsx","_jsx","jsxs","_jsxs","Tab","App","children","style","Navigator","screenOptions","_ref","route","tabBarIcon","_ref2","focused","color","size","iconName","name","tabBarActiveTintColor","colors","primary","tabBarInactiveTintColor","tabBarStyle","backgroundColor","surface","borderTopWidth","borderTopColor","outline","paddingBottom","paddingTop","height","headerStyle","headerTintColor","onPrimary","headerTitleStyle","fontWeight","Screen","component","options","title"],"sources":["/workspace/App.js"],"sourcesContent":["import React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { Provider as PaperProvider } from 'react-native-paper';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport { StatusBar } from 'expo-status-bar';\nimport { Ionicons } from '@expo/vector-icons';\n\nimport HomeScreen from './src/screens/HomeScreen';\nimport TasksScreen from './src/screens/TasksScreen';\nimport SettingsScreen from './src/screens/SettingsScreen';\nimport { theme } from './src/styles/theme';\n\nconst Tab = createBottomTabNavigator();\n\nexport default function App() {\n  return (\n    <SafeAreaProvider>\n      <PaperProvider theme={theme}>\n        <NavigationContainer>\n          <StatusBar style=\"auto\" />\n          <Tab.Navigator\n            screenOptions={({ route }) => ({\n              tabBarIcon: ({ focused, color, size }) => {\n                let iconName;\n                \n                if (route.name === 'Home') {\n                  iconName = focused ? 'home' : 'home-outline';\n                } else if (route.name === 'Tasks') {\n                  iconName = focused ? 'checkmark-circle' : 'checkmark-circle-outline';\n                } else if (route.name === 'Settings') {\n                  iconName = focused ? 'settings' : 'settings-outline';\n                }\n                \n                return <Ionicons name={iconName} size={size} color={color} />;\n              },\n              tabBarActiveTintColor: theme.colors.primary,\n              tabBarInactiveTintColor: 'gray',\n              tabBarStyle: {\n                backgroundColor: theme.colors.surface,\n                borderTopWidth: 1,\n                borderTopColor: theme.colors.outline,\n                paddingBottom: 5,\n                paddingTop: 5,\n                height: 60,\n              },\n              headerStyle: {\n                backgroundColor: theme.colors.primary,\n              },\n              headerTintColor: theme.colors.onPrimary,\n              headerTitleStyle: {\n                fontWeight: 'bold',\n              },\n            })}\n          >\n            <Tab.Screen \n              name=\"Home\" \n              component={HomeScreen}\n              options={{ title: 'Dashboard' }}\n            />\n            <Tab.Screen \n              name=\"Tasks\" \n              component={TasksScreen}\n              options={{ title: 'My Tasks' }}\n            />\n            <Tab.Screen \n              name=\"Settings\" \n              component={SettingsScreen}\n              options={{ title: 'Settings' }}\n            />\n          </Tab.Navigator>\n        </NavigationContainer>\n      </PaperProvider>\n    </SafeAreaProvider>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}